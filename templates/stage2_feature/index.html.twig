{% extends 'base.html.twig' %}

{% block title %}
  Calendar View
{% endblock %}

{% block styles %}
  <link href="/css/glDatePicker.default.css" rel="stylesheet" type="text/css" />
  <style>
    .map-container {
      width: 100%;
      height: 50vh;
      background-color: #f8f9fa;
      margin-bottom: 20px;
    }
    
    .refresh-controls {
      display: flex;
      gap: 10px;
      align-items: center;
      margin-bottom: 20px;
    }
    
    .auto-refresh-toggle {
      display: inline-flex;
      align-items: center;
      gap: 10px;
    }
    
    .toggle-switch {
      position: relative;
      display: inline-block;
      width: 60px;
      height: 34px;
    }
    
    .toggle-switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #dc3545;
      transition: 0.4s;
      border-radius: 34px;
    }
    
    .slider:before {
      position: absolute;
      content: '';
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: 0.4s;
      border-radius: 50%;
    }
    
    input:checked + .slider {
      background-color: #198754;
    }
    
    input:checked + .slider:before {
      transform: translateX(26px);
    }
    
    .title {
      transition: color 0.3s;
    }
    
    .title.disabled {
      color: #dc3545;
    }
  </style>
{% endblock %}

{% block body %}
  <h1 class="title mb-4">Calendar View</h1>
  <input type="text" id="mydate" />
{% endblock %}

{% block javascripts %}
  <script>
    $(document).ready(function () {
      $.get('/stage2/refresh', function (data) {
        console.log('Calendar refreshed at:', new Date().toLocaleString(), data)
        const selectableDates = []
        const today = new Date()
        for (let i = 0; i < 31; i++) {
          const date = new Date(today)
          console.log(date, 'date')
          date.setDate(today.getDate() + i)
          console.log(date, 'date+i')
          const dateKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`
          console.log(dateKey, 'datekey', data.includes(dateKey))
          if (!data.includes(dateKey)) {
            selectableDates.push({
              date: new Date(date.getFullYear(), date.getMonth(), date.getDate())
            })
          }
        }
        console.log(selectableDates)
        // Initialize date picker
        $('#mydate').glDatePicker({
          showAlways: true,
          allowMonthSelect: false,
          allowYearSelect: false,
          selectableDates: selectableDates
        })
      })
    })
  </script>
{% endblock %}
